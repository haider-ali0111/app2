{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport config from '../../config/config';\nconst API_URL = config.API_URL;\n\n// Async thunks\nexport const register = createAsyncThunk('auth/register', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('token', token);\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2, _error$response2$data, _error$response2$data2, _error$response2$data3;\n    // Handle both error message formats\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.errors) === null || _error$response2$data2 === void 0 ? void 0 : (_error$response2$data3 = _error$response2$data2[0]) === null || _error$response2$data3 === void 0 ? void 0 : _error$response2$data3.msg) || 'Registration failed';\n    return rejectWithValue(errorMessage);\n  }\n});\nexport const login = createAsyncThunk('auth/login', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, userData);\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('token', token);\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    var _error$response3, _error$response3$data, _error$response4, _error$response4$data, _error$response4$data2, _error$response4$data3;\n    // Handle both error message formats\n    const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : (_error$response4$data2 = _error$response4$data.errors) === null || _error$response4$data2 === void 0 ? void 0 : (_error$response4$data3 = _error$response4$data2[0]) === null || _error$response4$data3 === void 0 ? void 0 : _error$response4$data3.msg) || 'Login failed';\n    return rejectWithValue(errorMessage);\n  }\n});\nexport const loadUser = createAsyncThunk('auth/loadUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) throw new Error('No token found');\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${API_URL}/auth/me`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    return rejectWithValue(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || {\n      message: 'Authentication failed'\n    });\n  }\n});\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  user: null,\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('token');\n      state.token = null;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.loading = false;\n      state.error = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Register\n    .addCase(register.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      state.error = null;\n    }).addCase(register.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload || 'Registration failed';\n    })\n    // Login\n    .addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      state.error = null;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload || 'Login failed';\n    })\n    // Load User\n    .addCase(loadUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loadUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(loadUser.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.user = null;\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || 'Authentication failed';\n      localStorage.removeItem('token');\n    });\n  }\n});\nexport const {\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","config","API_URL","register","userData","rejectWithValue","response","post","token","user","data","localStorage","setItem","error","_error$response","_error$response$data","_error$response2","_error$response2$data","_error$response2$data2","_error$response2$data3","errorMessage","message","errors","msg","login","_error$response3","_error$response3$data","_error$response4","_error$response4$data","_error$response4$data2","_error$response4$data3","loadUser","_","getItem","Error","headers","Authorization","get","_error$response5","initialState","isAuthenticated","loading","authSlice","name","reducers","logout","state","removeItem","clearError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","_action$payload","actions","reducer"],"sources":["C:/Users/abs/Desktop/VideoApp/VideoApp/client/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport config from '../../config/config';\n\nconst API_URL = config.API_URL;\n\n// Async thunks\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\n      const { token, user } = response.data;\n      localStorage.setItem('token', token);\n      return { token, user };\n    } catch (error) {\n      // Handle both error message formats\n      const errorMessage = error.response?.data?.message || error.response?.data?.errors?.[0]?.msg || 'Registration failed';\n      return rejectWithValue(errorMessage);\n    }\n  }\n);\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, userData);\n      const { token, user } = response.data;\n      localStorage.setItem('token', token);\n      return { token, user };\n    } catch (error) {\n      // Handle both error message formats\n      const errorMessage = error.response?.data?.message || error.response?.data?.errors?.[0]?.msg || 'Login failed';\n      return rejectWithValue(errorMessage);\n    }\n  }\n);\n\nexport const loadUser = createAsyncThunk(\n  'auth/loadUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error('No token found');\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n\n      const response = await axios.get(`${API_URL}/auth/me`, config);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || { message: 'Authentication failed' });\n    }\n  }\n);\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  user: null,\n  loading: false,\n  error: null\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      localStorage.removeItem('token');\n      state.token = null;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.loading = false;\n      state.error = null;\n    },\n    clearError: (state) => {\n      state.error = null;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      // Register\n      .addCase(register.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        state.token = action.payload.token;\n        state.user = action.payload.user;\n        state.error = null;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload || 'Registration failed';\n      })\n      // Login\n      .addCase(login.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        state.token = action.payload.token;\n        state.user = action.payload.user;\n        state.error = null;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload || 'Login failed';\n      })\n      // Load User\n      .addCase(loadUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loadUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload;\n      })\n      .addCase(loadUser.rejected, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = false;\n        state.token = null;\n        state.user = null;\n        state.error = action.payload?.message || 'Authentication failed';\n        localStorage.removeItem('token');\n      });\n  }\n});\n\nexport const { logout, clearError } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}